# Uncomment later for testing shared codeql workflow
# name: "CodeQL Analysis"

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   codeql:
#     uses: stigian-nmmes-minicore-rpoc/.github/workflows/20-codeql.yaml@main

# Code below for testing CodeQL local to current repo
name: SAST

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - main

jobs:
  # trivy:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v4

  #   # Scans Dockerfile, docker-compose.yml, and k8s yaml files
  #   - name: Run Trivy vulnerability scanner in IaC mode
  #     uses: aquasecurity/trivy-action@master
  #     with:
  #       scan-type: 'config'
  #       hide-progress: false
  #       format: 'sarif'
  #       output: 'trivy-iac-results.sarif'
  #       exit-code: '1'
  #       ignore-unfixed: true
  #       severity: 'CRITICAL,HIGH'

  #   - name: Upload Trivy scan results to GitHub Security tab
  #     uses: github/codeql-action/upload-sarif@v2
  #     with:
  #       sarif_file: 'trivy-iac-results.sarif'

  codeql: # Scan just dotnet code and artifacts
    runs-on: ubuntu-latest
    timeout-minutes: 20 # TODO: adjust as needed once we have a better idea of how long this takes
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: csharp

    # Autobuild attempts to build any compiled languages (C/C++, C#, Go, Java, or Swift).
    # If this step fails, then you should remove it and run the build manually (see below)
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    #  If the Autobuild fails above, remove it and uncomment the following three lines.
    #  modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

    # - run: |
    #     echo "Run, Build Application using script"
    #     ./location_of_script_within_repo/buildscript.sh

    # - name: Find solution file
    #   run: echo "SOLUTION_FILE=$(find . -maxdepth 1 -name '*.sln' | head -n 1)" >> $GITHUB_ENV

    # - name: Build solution
    #   run: dotnet build $SOLUTION_FILE --configuration Release

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

    # CodeQL action uploads SARIF results to GitHub automatically
    # See https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/uploading-a-sarif-file-to-github
    # for more information.
